@model BHMS.Models.FactoryCashAdjustment
@using BHMS.Helpers

@{
    ViewBag.Title = "FactoryCashAdjustment";
    ViewBag.SubTitle = "Edit";
}

<div class="panel panel-primary panel-bordered">
    <div class="panel-heading">
        <h5 class="panel-title">Cash Adjustment From Factory</h5>
    </div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.EntryDate)
                <div class="form-group form-group-xs">
                    @Html.LabelFor(model => model.SupplierId, "Factory Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SupplierId", null, "", htmlAttributes: new { @class = "form-control select2 input-xs" })
                        @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group form-group-xs">
                    @Html.LabelFor(model => model.FacAdjustDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.FacAdjustDate, new { htmlAttributes = new { @class = "form-control datepicker" } })*@
                        <input type="text" value="@(NullHelpers.DateToString(Model.FacAdjustDate))" id="FacAdjustDate" name="FacAdjustDate" class="form-control datepicker">
                         @Html.ValidationMessageFor(model => model.FacAdjustDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group form-group-xs">
                    @Html.LabelFor(model => model.FacReciptNo, "RDL Rcpt. No", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FacReciptNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FacReciptNo, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group form-group-xs">
                    @Html.LabelFor(model => model.FacAdjustAmount, "Amount", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FacAdjustAmount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FacAdjustAmount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group form-group-xs">
                    @Html.LabelFor(model => model.FacAdjustRemarks, "Remarks", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FacAdjustRemarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FacAdjustRemarks, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                        @Html.LabelFor(model => model.IsAuth, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsAuth)
                                @Html.ValidationMessageFor(model => model.IsAuth, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OpBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OpBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OpBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OpOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.OpOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OpOn, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AuthBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AuthBy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AuthBy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AuthOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AuthOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AuthOn, "", new { @class = "text-danger" })
                        </div>
                    </div>*@


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(document).ready(function () {
            $(".select2").select2();

            $('.datepicker').datepicker({
                format: 'dd/mm/yyyy',
                todayHighlight: true,
                todayBtn: true,
                autoclose: true
            });

            // jquery validator bug fix using moment
            $.validator.methods.date = function (value, element) {
                return this.optional(element) || moment(value, "DD/MM/YYYY", true).isValid();
            }

        });

    </script>

}